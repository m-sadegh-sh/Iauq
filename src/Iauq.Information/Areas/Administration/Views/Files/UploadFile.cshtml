@using Iauq.Web.Mvc.UI
@model Iauq.Information.Areas.Administration.Models.Files.UploadDbFileModel

@{
    ViewBag.Title = "پنل مدیریت - فایل‌ها - ارسال فایل";
    PagePartManager.Current.AddBreadcrumb(Html.ActionLink("پنل مدیریت", "Default", "Administration"));
    PagePartManager.Current.AddBreadcrumb(Html.ActionLink("فایل‌ها", "List", "Files", new {page = 1}, null));

    var parent = ViewBag.Parent as Iauq.Core.Domain.File;

    Iauq.Core.Domain.File currentFile = parent;
    var files = new List<MvcHtmlString>();

    while (currentFile != null)
    {
        files.Add(@Html.ActionLink(currentFile.Name, "List", new { currentFile.Id, page = 1 }));

        currentFile = currentFile.Parent;
    }

    files.Reverse();

    foreach (MvcHtmlString file in files)
    {
        PagePartManager.Current.AddBreadcrumb(file);
    }
    
    PagePartManager.Current.AddBreadcrumb(Html.ActionLink("ارسال فایل", "UploadFile", "Files", new {Model.ParentId}));
}

@Html.AntiForgeryToken()
<div class="rounded-box newest row-fluid">
    <div class="inside">
        <h1>@ViewBag.Title
        </h1>
        <hr />
        @using (Html.BeginForm("UploadFile", "Files", new {Model.ParentId}, FormMethod.Post, new {enctype = "multipart/form-data", @class = "form-horizontal"}))
        {
            @Html.ValidationSummary(true)
            <fieldset>
                <div class="control-group">
                    @Html.LabelFor(udfm => udfm.FileName, new {@class = "control-label"})
                    <div class="controls">
                        @Html.TextBoxFor(udfm => udfm.FileName, new {@class = "input-large"})
                        @Html.ValidationMessageFor(fum => fum.FileName, null, new {@class = "help-inline"})
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(udfm => udfm.AccessMode, new {@class = "control-label"})
                    <div class="controls">
                        @Html.DropDownListFor(udfm => udfm.AccessMode, (SelectList) ViewBag.AccessModes, new {@class = "input-large"})
                        @Html.ValidationMessageFor(fum => fum.AccessMode, null, new {@class = "help-inline"})
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(udfm => udfm.PostedFile, new {@class = "control-label"})
                    <div class="controls">
                        @Html.TextBoxFor(udfm => udfm.PostedFile, new {@class = "input-large", type = "file"})
                        @Html.ValidationMessageFor(fum => fum.FileName, null, new {@class = "help-inline"})
                    </div>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn btn-success">ارسال</button>
                    @Html.ActionLink("برگشت", "List", new {page=1,Model.ParentId}, new {@class = "btn"})
                </div>
            </fieldset>
        }
    </div>
</div>